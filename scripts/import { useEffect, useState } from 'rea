import { useEffect, useState } from 'react';
import { useParams } from 'react-router-dom';
import ReactMarkdown from 'react-markdown';

export default function StoryViewer() {
  const { storyId } = useParams();
  const [content, setContent] = useState('');
  const [error, setError] = useState('');
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    async function loadStory() {
      try {
        setLoading(true);
        
        // Pfade zu den Markdown-Dateien korrigieren - passe dies an deine Struktur an
        let response;
        try {
          // Versuche zuerst aus dem stories-Verzeichnis zu laden
          response = await fetch(`/stories/${storyId}.md`);
        } catch (e) {
          // Wenn das fehlschlägt, versuche aus dem content-Verzeichnis
          response = await fetch(`/content/${storyId}.md`);
        }
        
        if (!response.ok) {
          throw new Error(`Story konnte nicht gefunden werden (Status ${response.status})`);
        }
        
        const text = await response.text();
        setContent(text);
      } catch (err) {
        console.error("Fehler beim Laden der Geschichte:", err);
        setError(`Geschichte "${storyId}" konnte nicht geladen werden. Bitte versuche es später erneut.`);
      } finally {
        setLoading(false);
      }
    }
    
    if (storyId) {
      loadStory();
    }
  }, [storyId]);

  if (loading) return <div className="p-4">Lade Geschichte...</div>;
  if (error) return <div className="p-4 text-red-500">{error}</div>;
  if (!content) return <div className="p-4">Geschichte nicht gefunden</div>;

  return (
    <div className="prose max-w-none p-4">
      <ReactMarkdown>{content}</ReactMarkdown>
    </div>
  );
}